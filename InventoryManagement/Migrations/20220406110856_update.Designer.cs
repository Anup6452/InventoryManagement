// <auto-generated />
using InventoryManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InventoryManagement.Migrations
{
    [DbContext(typeof(InventoryDBContext))]
    [Migration("20220406110856_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InventoryManagement.Entity.Employee", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EmployeeId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PersonId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = "a52e36ad-8c81-4694-8e84-913a20bd615e",
                            Email = "admin@mail.com",
                            Password = "SKuMvgo1qvkaCrAitMDDT+SrfOPqgJS7cNPrf9dAW8s=",
                            PersonId = "Person-01",
                            RoleId = "Role-01"
                        });
                });

            modelBuilder.Entity("InventoryManagement.Entity.ListItem", b =>
                {
                    b.Property<string>("ListItemId")
                        .HasColumnType("text");

                    b.Property<string>("ListItemCategoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ListItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ListItemId");

                    b.HasIndex("ListItemCategoryId");

                    b.HasIndex("ListItemId")
                        .IsUnique();

                    b.HasIndex("ListItemName")
                        .IsUnique();

                    b.ToTable("ListItem");

                    b.HasData(
                        new
                        {
                            ListItemId = "ListItem-01",
                            ListItemCategoryId = "Cat-01",
                            ListItemName = "Male"
                        },
                        new
                        {
                            ListItemId = "ListItem-02",
                            ListItemCategoryId = "Cat-01",
                            ListItemName = "Female"
                        });
                });

            modelBuilder.Entity("InventoryManagement.Entity.ListItemCategory", b =>
                {
                    b.Property<string>("ListItemCategoryId")
                        .HasColumnType("text");

                    b.Property<string>("ListItemCategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ListItemCategoryId");

                    b.HasIndex("ListItemCategoryId")
                        .IsUnique();

                    b.HasIndex("ListItemCategoryName")
                        .IsUnique();

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            ListItemCategoryId = "Cat-01",
                            ListItemCategoryName = "Gender"
                        });
                });

            modelBuilder.Entity("InventoryManagement.Entity.Person", b =>
                {
                    b.Property<string>("PersonId")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GenderListItemId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PersonId");

                    b.HasIndex("ContactNo")
                        .IsUnique();

                    b.HasIndex("GenderListItemId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PersonId = "Person-01",
                            Address = "",
                            ContactNo = "",
                            FirstName = "Admin",
                            GenderListItemId = "ListItem-01",
                            LastName = "",
                            MiddleName = ""
                        });
                });

            modelBuilder.Entity("InventoryManagement.Entity.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoleId");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = "Role-01",
                            RoleName = "SuperAdmin"
                        });
                });

            modelBuilder.Entity("InventoryManagement.Entity.Employee", b =>
                {
                    b.HasOne("InventoryManagement.Entity.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryManagement.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("InventoryManagement.Entity.ListItem", b =>
                {
                    b.HasOne("InventoryManagement.Entity.ListItemCategory", "ListItemCategory")
                        .WithMany()
                        .HasForeignKey("ListItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListItemCategory");
                });

            modelBuilder.Entity("InventoryManagement.Entity.Person", b =>
                {
                    b.HasOne("InventoryManagement.Entity.ListItem", "ListItem")
                        .WithMany()
                        .HasForeignKey("GenderListItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListItem");
                });
#pragma warning restore 612, 618
        }
    }
}
